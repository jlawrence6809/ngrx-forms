export * from './actions';
export { box, isBoxed, unbox } from './boxing';
export { isArrayState, isGroupState, createFormControlState, createFormGroupState, createFormArrayState, } from './state';
export { formControlReducer } from './control/reducer';
export { formGroupReducer } from './group/reducer';
export { formArrayReducer } from './array/reducer';
export { createFormStateReducerWithUpdate, formStateReducer, onNgrxForms, onNgrxFormsAction, wrapReducerWithFormStateUpdate, } from './reducer';
export * from './update-function/update-array';
export * from './update-function/update-group';
export * from './update-function/update-recursive';
export * from './update-function/set-value';
export * from './update-function/set-errors';
export * from './update-function/validate';
export * from './update-function/enable';
export * from './update-function/disable';
export * from './update-function/mark-as-dirty';
export * from './update-function/mark-as-pristine';
export * from './update-function/mark-as-touched';
export * from './update-function/mark-as-untouched';
export * from './update-function/mark-as-submitted';
export * from './update-function/mark-as-unsubmitted';
export * from './update-function/focus';
export * from './update-function/unfocus';
export * from './update-function/add-array-control';
export * from './update-function/add-group-control';
export * from './update-function/remove-array-control';
export * from './update-function/remove-group-control';
export * from './update-function/set-user-defined-property';
export * from './update-function/reset';
export * from './update-function/start-async-validation';
export * from './update-function/set-async-error';
export * from './update-function/clear-async-error';
export { compose } from './update-function/util';
export { NGRX_FORM_VIEW_ADAPTER } from './view-adapter/view-adapter';
export { NgrxCheckboxViewAdapter } from './view-adapter/checkbox';
export { NgrxDefaultViewAdapter } from './view-adapter/default';
export { NgrxNumberViewAdapter } from './view-adapter/number';
export { NgrxFallbackSelectOption } from './view-adapter/option';
export { NgrxRadioViewAdapter } from './view-adapter/radio';
export { NgrxRangeViewAdapter } from './view-adapter/range';
export { NgrxSelectViewAdapter, NgrxSelectOption } from './view-adapter/select';
export { NgrxSelectMultipleViewAdapter, NgrxSelectMultipleOption } from './view-adapter/select-multiple';
export { NgrxFormControlDirective } from './control/directive';
export { NgrxLocalFormControlDirective } from './control/local-state-directive';
export { NgrxFormDirective } from './group/directive';
export { NgrxLocalFormDirective } from './group/local-state-directive';
export { NgrxValueConverters } from './control/value-converter';
export { NGRX_STATUS_CLASS_NAMES, NgrxStatusCssClassesDirective } from './status-css-classes.directive';
export { NgrxFormsModule } from './module';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmdyeC1mb3Jtcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25ncngtZm9ybXMvIiwic291cmNlcyI6WyJzcmMvbmdyeC1mb3Jtcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjLFdBQVcsQ0FBQztBQUMxQixPQUFPLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQWlDLE1BQU0sVUFBVSxDQUFDO0FBQzlFLE9BQU8sRUFhTCxZQUFZLEVBQ1osWUFBWSxFQUNaLHNCQUFzQixFQUN0QixvQkFBb0IsRUFDcEIsb0JBQW9CLEdBQ3JCLE1BQU0sU0FBUyxDQUFDO0FBRWpCLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ25ELE9BQU8sRUFHTCxnQ0FBZ0MsRUFDaEMsZ0JBQWdCLEVBQ2hCLFdBQVcsRUFDWCxpQkFBaUIsRUFDakIsOEJBQThCLEdBQy9CLE1BQU0sV0FBVyxDQUFDO0FBRW5CLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyxnQ0FBZ0MsQ0FBQztBQUMvQyxjQUFjLG9DQUFvQyxDQUFDO0FBQ25ELGNBQWMsNkJBQTZCLENBQUM7QUFDNUMsY0FBYyw4QkFBOEIsQ0FBQztBQUM3QyxjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsMEJBQTBCLENBQUM7QUFDekMsY0FBYywyQkFBMkIsQ0FBQztBQUMxQyxjQUFjLGlDQUFpQyxDQUFDO0FBQ2hELGNBQWMsb0NBQW9DLENBQUM7QUFDbkQsY0FBYyxtQ0FBbUMsQ0FBQztBQUNsRCxjQUFjLHFDQUFxQyxDQUFDO0FBQ3BELGNBQWMscUNBQXFDLENBQUM7QUFDcEQsY0FBYyx1Q0FBdUMsQ0FBQztBQUN0RCxjQUFjLHlCQUF5QixDQUFDO0FBQ3hDLGNBQWMsMkJBQTJCLENBQUM7QUFDMUMsY0FBYyxxQ0FBcUMsQ0FBQztBQUNwRCxjQUFjLHFDQUFxQyxDQUFDO0FBQ3BELGNBQWMsd0NBQXdDLENBQUM7QUFDdkQsY0FBYyx3Q0FBd0MsQ0FBQztBQUN2RCxjQUFjLDZDQUE2QyxDQUFDO0FBQzVELGNBQWMseUJBQXlCLENBQUM7QUFDeEMsY0FBYywwQ0FBMEMsQ0FBQztBQUN6RCxjQUFjLG1DQUFtQyxDQUFDO0FBQ2xELGNBQWMscUNBQXFDLENBQUM7QUFFcEQsT0FBTyxFQUFFLE9BQU8sRUFBeUIsTUFBTSx3QkFBd0IsQ0FBQztBQUV4RSxPQUFPLEVBQW1CLHNCQUFzQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDdEYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDaEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDOUQsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDakUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDNUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDNUQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLGdCQUFnQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDaEYsT0FBTyxFQUFFLDZCQUE2QixFQUFFLHdCQUF3QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFekcsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDL0QsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDaEYsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFFdkUsT0FBTyxFQUFzQixtQkFBbUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBRXBGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSw2QkFBNkIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBRXhHLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxVQUFVLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2FjdGlvbnMnO1xuZXhwb3J0IHsgYm94LCBpc0JveGVkLCB1bmJveCwgQm94ZWQsIFVuYm94ZWQsIFVuYm94ZWRPYmplY3QgfSBmcm9tICcuL2JveGluZyc7XG5leHBvcnQge1xuICBGb3JtQ29udHJvbFZhbHVlVHlwZXMsXG4gIE5ncnhGb3JtQ29udHJvbElkLFxuICBWYWxpZGF0aW9uRXJyb3JzLFxuICBLZXlWYWx1ZSxcbiAgQWJzdHJhY3RDb250cm9sU3RhdGUsXG4gIEZvcm1Db250cm9sU3RhdGUsXG4gIEZvcm1Hcm91cENvbnRyb2xzLFxuICBGb3JtR3JvdXBTdGF0ZSxcbiAgRm9ybUFycmF5U3RhdGUsXG4gIEZvcm1TdGF0ZSxcbiAgSW5mZXJlbmNlV3JhcHBlcixcbiAgSW5mZXJyZWRGb3JtU3RhdGUsXG4gIGlzQXJyYXlTdGF0ZSxcbiAgaXNHcm91cFN0YXRlLFxuICBjcmVhdGVGb3JtQ29udHJvbFN0YXRlLFxuICBjcmVhdGVGb3JtR3JvdXBTdGF0ZSxcbiAgY3JlYXRlRm9ybUFycmF5U3RhdGUsXG59IGZyb20gJy4vc3RhdGUnO1xuXG5leHBvcnQgeyBmb3JtQ29udHJvbFJlZHVjZXIgfSBmcm9tICcuL2NvbnRyb2wvcmVkdWNlcic7XG5leHBvcnQgeyBmb3JtR3JvdXBSZWR1Y2VyIH0gZnJvbSAnLi9ncm91cC9yZWR1Y2VyJztcbmV4cG9ydCB7IGZvcm1BcnJheVJlZHVjZXIgfSBmcm9tICcuL2FycmF5L3JlZHVjZXInO1xuZXhwb3J0IHtcbiAgQWN0aW9uQ29uc3RydWN0b3IsXG4gIENyZWF0ZWRBY3Rpb24sXG4gIGNyZWF0ZUZvcm1TdGF0ZVJlZHVjZXJXaXRoVXBkYXRlLFxuICBmb3JtU3RhdGVSZWR1Y2VyLFxuICBvbk5ncnhGb3JtcyxcbiAgb25OZ3J4Rm9ybXNBY3Rpb24sXG4gIHdyYXBSZWR1Y2VyV2l0aEZvcm1TdGF0ZVVwZGF0ZSxcbn0gZnJvbSAnLi9yZWR1Y2VyJztcblxuZXhwb3J0ICogZnJvbSAnLi91cGRhdGUtZnVuY3Rpb24vdXBkYXRlLWFycmF5JztcbmV4cG9ydCAqIGZyb20gJy4vdXBkYXRlLWZ1bmN0aW9uL3VwZGF0ZS1ncm91cCc7XG5leHBvcnQgKiBmcm9tICcuL3VwZGF0ZS1mdW5jdGlvbi91cGRhdGUtcmVjdXJzaXZlJztcbmV4cG9ydCAqIGZyb20gJy4vdXBkYXRlLWZ1bmN0aW9uL3NldC12YWx1ZSc7XG5leHBvcnQgKiBmcm9tICcuL3VwZGF0ZS1mdW5jdGlvbi9zZXQtZXJyb3JzJztcbmV4cG9ydCAqIGZyb20gJy4vdXBkYXRlLWZ1bmN0aW9uL3ZhbGlkYXRlJztcbmV4cG9ydCAqIGZyb20gJy4vdXBkYXRlLWZ1bmN0aW9uL2VuYWJsZSc7XG5leHBvcnQgKiBmcm9tICcuL3VwZGF0ZS1mdW5jdGlvbi9kaXNhYmxlJztcbmV4cG9ydCAqIGZyb20gJy4vdXBkYXRlLWZ1bmN0aW9uL21hcmstYXMtZGlydHknO1xuZXhwb3J0ICogZnJvbSAnLi91cGRhdGUtZnVuY3Rpb24vbWFyay1hcy1wcmlzdGluZSc7XG5leHBvcnQgKiBmcm9tICcuL3VwZGF0ZS1mdW5jdGlvbi9tYXJrLWFzLXRvdWNoZWQnO1xuZXhwb3J0ICogZnJvbSAnLi91cGRhdGUtZnVuY3Rpb24vbWFyay1hcy11bnRvdWNoZWQnO1xuZXhwb3J0ICogZnJvbSAnLi91cGRhdGUtZnVuY3Rpb24vbWFyay1hcy1zdWJtaXR0ZWQnO1xuZXhwb3J0ICogZnJvbSAnLi91cGRhdGUtZnVuY3Rpb24vbWFyay1hcy11bnN1Ym1pdHRlZCc7XG5leHBvcnQgKiBmcm9tICcuL3VwZGF0ZS1mdW5jdGlvbi9mb2N1cyc7XG5leHBvcnQgKiBmcm9tICcuL3VwZGF0ZS1mdW5jdGlvbi91bmZvY3VzJztcbmV4cG9ydCAqIGZyb20gJy4vdXBkYXRlLWZ1bmN0aW9uL2FkZC1hcnJheS1jb250cm9sJztcbmV4cG9ydCAqIGZyb20gJy4vdXBkYXRlLWZ1bmN0aW9uL2FkZC1ncm91cC1jb250cm9sJztcbmV4cG9ydCAqIGZyb20gJy4vdXBkYXRlLWZ1bmN0aW9uL3JlbW92ZS1hcnJheS1jb250cm9sJztcbmV4cG9ydCAqIGZyb20gJy4vdXBkYXRlLWZ1bmN0aW9uL3JlbW92ZS1ncm91cC1jb250cm9sJztcbmV4cG9ydCAqIGZyb20gJy4vdXBkYXRlLWZ1bmN0aW9uL3NldC11c2VyLWRlZmluZWQtcHJvcGVydHknO1xuZXhwb3J0ICogZnJvbSAnLi91cGRhdGUtZnVuY3Rpb24vcmVzZXQnO1xuZXhwb3J0ICogZnJvbSAnLi91cGRhdGUtZnVuY3Rpb24vc3RhcnQtYXN5bmMtdmFsaWRhdGlvbic7XG5leHBvcnQgKiBmcm9tICcuL3VwZGF0ZS1mdW5jdGlvbi9zZXQtYXN5bmMtZXJyb3InO1xuZXhwb3J0ICogZnJvbSAnLi91cGRhdGUtZnVuY3Rpb24vY2xlYXItYXN5bmMtZXJyb3InO1xuXG5leHBvcnQgeyBjb21wb3NlLCBQcm9qZWN0Rm4sIFByb2plY3RGbjIgfSBmcm9tICcuL3VwZGF0ZS1mdW5jdGlvbi91dGlsJztcblxuZXhwb3J0IHsgRm9ybVZpZXdBZGFwdGVyLCBOR1JYX0ZPUk1fVklFV19BREFQVEVSIH0gZnJvbSAnLi92aWV3LWFkYXB0ZXIvdmlldy1hZGFwdGVyJztcbmV4cG9ydCB7IE5ncnhDaGVja2JveFZpZXdBZGFwdGVyIH0gZnJvbSAnLi92aWV3LWFkYXB0ZXIvY2hlY2tib3gnO1xuZXhwb3J0IHsgTmdyeERlZmF1bHRWaWV3QWRhcHRlciB9IGZyb20gJy4vdmlldy1hZGFwdGVyL2RlZmF1bHQnO1xuZXhwb3J0IHsgTmdyeE51bWJlclZpZXdBZGFwdGVyIH0gZnJvbSAnLi92aWV3LWFkYXB0ZXIvbnVtYmVyJztcbmV4cG9ydCB7IE5ncnhGYWxsYmFja1NlbGVjdE9wdGlvbiB9IGZyb20gJy4vdmlldy1hZGFwdGVyL29wdGlvbic7XG5leHBvcnQgeyBOZ3J4UmFkaW9WaWV3QWRhcHRlciB9IGZyb20gJy4vdmlldy1hZGFwdGVyL3JhZGlvJztcbmV4cG9ydCB7IE5ncnhSYW5nZVZpZXdBZGFwdGVyIH0gZnJvbSAnLi92aWV3LWFkYXB0ZXIvcmFuZ2UnO1xuZXhwb3J0IHsgTmdyeFNlbGVjdFZpZXdBZGFwdGVyLCBOZ3J4U2VsZWN0T3B0aW9uIH0gZnJvbSAnLi92aWV3LWFkYXB0ZXIvc2VsZWN0JztcbmV4cG9ydCB7IE5ncnhTZWxlY3RNdWx0aXBsZVZpZXdBZGFwdGVyLCBOZ3J4U2VsZWN0TXVsdGlwbGVPcHRpb24gfSBmcm9tICcuL3ZpZXctYWRhcHRlci9zZWxlY3QtbXVsdGlwbGUnO1xuXG5leHBvcnQgeyBOZ3J4Rm9ybUNvbnRyb2xEaXJlY3RpdmUgfSBmcm9tICcuL2NvbnRyb2wvZGlyZWN0aXZlJztcbmV4cG9ydCB7IE5ncnhMb2NhbEZvcm1Db250cm9sRGlyZWN0aXZlIH0gZnJvbSAnLi9jb250cm9sL2xvY2FsLXN0YXRlLWRpcmVjdGl2ZSc7XG5leHBvcnQgeyBOZ3J4Rm9ybURpcmVjdGl2ZSB9IGZyb20gJy4vZ3JvdXAvZGlyZWN0aXZlJztcbmV4cG9ydCB7IE5ncnhMb2NhbEZvcm1EaXJlY3RpdmUgfSBmcm9tICcuL2dyb3VwL2xvY2FsLXN0YXRlLWRpcmVjdGl2ZSc7XG5cbmV4cG9ydCB7IE5ncnhWYWx1ZUNvbnZlcnRlciwgTmdyeFZhbHVlQ29udmVydGVycyB9IGZyb20gJy4vY29udHJvbC92YWx1ZS1jb252ZXJ0ZXInO1xuXG5leHBvcnQgeyBOR1JYX1NUQVRVU19DTEFTU19OQU1FUywgTmdyeFN0YXR1c0Nzc0NsYXNzZXNEaXJlY3RpdmUgfSBmcm9tICcuL3N0YXR1cy1jc3MtY2xhc3Nlcy5kaXJlY3RpdmUnO1xuXG5leHBvcnQgeyBOZ3J4Rm9ybXNNb2R1bGUgfSBmcm9tICcuL21vZHVsZSc7XG4iXX0=
import { formStateReducer } from '../../reducer';
import { computeGroupState } from '../../state';
export function dispatchActionPerChild(controls, actionCreator) {
    let hasChanged = false;
    const newControls = Object.keys(controls)
        .reduce((c, key) => {
        Object.assign(c, { [key]: formStateReducer(controls[key], actionCreator(controls[key].id)) });
        hasChanged = hasChanged || c[key] !== controls[key];
        return c;
    }, {});
    return hasChanged ? newControls : controls;
}
function callChildReducers(controls, action) {
    let hasChanged = false;
    const newControls = Object.keys(controls)
        .map(key => [key, formStateReducer(controls[key], action)])
        .reduce((res, [key, state]) => {
        hasChanged = hasChanged || state !== controls[key];
        return Object.assign(res, { [key]: state });
    }, {});
    return hasChanged ? newControls : controls;
}
export function childReducer(state, action) {
    const controls = callChildReducers(state.controls, action);
    if (state.controls === controls) {
        return state;
    }
    return computeGroupState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {
        wasOrShouldBeDirty: state.isDirty,
        wasOrShouldBeEnabled: state.isEnabled,
        wasOrShouldBeTouched: state.isTouched,
        wasOrShouldBeSubmitted: state.isSubmitted,
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25ncngtZm9ybXMvIiwic291cmNlcyI6WyJzcmMvZ3JvdXAvcmVkdWNlci91dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsaUJBQWlCLEVBQTBELE1BQU0sYUFBYSxDQUFDO0FBRXhHLE1BQU0sVUFBVSxzQkFBc0IsQ0FDcEMsUUFBbUMsRUFDbkMsYUFBcUQ7SUFFckQsSUFBSSxVQUFVLEdBQUcsS0FBSyxDQUFDO0lBQ3ZCLE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1NBQ3RDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUNqQixNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFLGFBQWEsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDOUYsVUFBVSxHQUFHLFVBQVUsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3BELE9BQU8sQ0FBQyxDQUFDO0lBQ1gsQ0FBQyxFQUFFLEVBQStCLENBQUMsQ0FBQztJQUN0QyxPQUFPLFVBQVUsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7QUFDN0MsQ0FBQztBQUVELFNBQVMsaUJBQWlCLENBQ3hCLFFBQW1DLEVBQ25DLE1BQXVCO0lBRXZCLElBQUksVUFBVSxHQUFHLEtBQUssQ0FBQztJQUN2QixNQUFNLFdBQVcsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztTQUN0QyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQTZCLENBQUM7U0FDdEYsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxFQUFFLEVBQUU7UUFDNUIsVUFBVSxHQUFHLFVBQVUsSUFBSSxLQUFLLEtBQUssUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ25ELE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDOUMsQ0FBQyxFQUFFLEVBQStCLENBQUMsQ0FBQztJQUN0QyxPQUFPLFVBQVUsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7QUFDN0MsQ0FBQztBQUVELE1BQU0sVUFBVSxZQUFZLENBQTBCLEtBQTZCLEVBQUUsTUFBdUI7SUFDMUcsTUFBTSxRQUFRLEdBQUcsaUJBQWlCLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUUzRCxJQUFJLEtBQUssQ0FBQyxRQUFRLEtBQUssUUFBUSxFQUFFO1FBQy9CLE9BQU8sS0FBSyxDQUFDO0tBQ2Q7SUFFRCxPQUFPLGlCQUFpQixDQUN0QixLQUFLLENBQUMsRUFBRSxFQUNSLFFBQVEsRUFDUixLQUFLLENBQUMsS0FBSyxFQUNYLEtBQUssQ0FBQyxNQUFNLEVBQ1osS0FBSyxDQUFDLGtCQUFrQixFQUN4QixLQUFLLENBQUMscUJBQXFCLEVBQzNCO1FBQ0Usa0JBQWtCLEVBQUUsS0FBSyxDQUFDLE9BQU87UUFDakMsb0JBQW9CLEVBQUUsS0FBSyxDQUFDLFNBQVM7UUFDckMsb0JBQW9CLEVBQUUsS0FBSyxDQUFDLFNBQVM7UUFDckMsc0JBQXNCLEVBQUUsS0FBSyxDQUFDLFdBQVc7S0FDMUMsQ0FDRixDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjdGlvbnMgfSBmcm9tICcuLi8uLi9hY3Rpb25zJztcbmltcG9ydCB7IGZvcm1TdGF0ZVJlZHVjZXIgfSBmcm9tICcuLi8uLi9yZWR1Y2VyJztcbmltcG9ydCB7IGNvbXB1dGVHcm91cFN0YXRlLCBGb3JtR3JvdXBDb250cm9scywgRm9ybUdyb3VwU3RhdGUsIEZvcm1TdGF0ZSwgS2V5VmFsdWUgfSBmcm9tICcuLi8uLi9zdGF0ZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXNwYXRjaEFjdGlvblBlckNoaWxkPFRWYWx1ZSBleHRlbmRzIEtleVZhbHVlPihcbiAgY29udHJvbHM6IEZvcm1Hcm91cENvbnRyb2xzPFRWYWx1ZT4sXG4gIGFjdGlvbkNyZWF0b3I6IChjb250cm9sSWQ6IHN0cmluZykgPT4gQWN0aW9uczxUVmFsdWU+LFxuKSB7XG4gIGxldCBoYXNDaGFuZ2VkID0gZmFsc2U7XG4gIGNvbnN0IG5ld0NvbnRyb2xzID0gT2JqZWN0LmtleXMoY29udHJvbHMpXG4gICAgLnJlZHVjZSgoYywga2V5KSA9PiB7XG4gICAgICBPYmplY3QuYXNzaWduKGMsIHsgW2tleV06IGZvcm1TdGF0ZVJlZHVjZXIoY29udHJvbHNba2V5XSwgYWN0aW9uQ3JlYXRvcihjb250cm9sc1trZXldLmlkKSkgfSk7XG4gICAgICBoYXNDaGFuZ2VkID0gaGFzQ2hhbmdlZCB8fCBjW2tleV0gIT09IGNvbnRyb2xzW2tleV07XG4gICAgICByZXR1cm4gYztcbiAgICB9LCB7fSBhcyBGb3JtR3JvdXBDb250cm9sczxUVmFsdWU+KTtcbiAgcmV0dXJuIGhhc0NoYW5nZWQgPyBuZXdDb250cm9scyA6IGNvbnRyb2xzO1xufVxuXG5mdW5jdGlvbiBjYWxsQ2hpbGRSZWR1Y2VyczxUVmFsdWUgZXh0ZW5kcyB7IFtrZXk6IHN0cmluZ106IGFueSB9PihcbiAgY29udHJvbHM6IEZvcm1Hcm91cENvbnRyb2xzPFRWYWx1ZT4sXG4gIGFjdGlvbjogQWN0aW9uczxUVmFsdWU+LFxuKTogRm9ybUdyb3VwQ29udHJvbHM8VFZhbHVlPiB7XG4gIGxldCBoYXNDaGFuZ2VkID0gZmFsc2U7XG4gIGNvbnN0IG5ld0NvbnRyb2xzID0gT2JqZWN0LmtleXMoY29udHJvbHMpXG4gICAgLm1hcChrZXkgPT4gW2tleSwgZm9ybVN0YXRlUmVkdWNlcihjb250cm9sc1trZXldLCBhY3Rpb24pXSBhcyBbc3RyaW5nLCBGb3JtU3RhdGU8YW55Pl0pXG4gICAgLnJlZHVjZSgocmVzLCBba2V5LCBzdGF0ZV0pID0+IHtcbiAgICAgIGhhc0NoYW5nZWQgPSBoYXNDaGFuZ2VkIHx8IHN0YXRlICE9PSBjb250cm9sc1trZXldO1xuICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24ocmVzLCB7IFtrZXldOiBzdGF0ZSB9KTtcbiAgICB9LCB7fSBhcyBGb3JtR3JvdXBDb250cm9sczxUVmFsdWU+KTtcbiAgcmV0dXJuIGhhc0NoYW5nZWQgPyBuZXdDb250cm9scyA6IGNvbnRyb2xzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2hpbGRSZWR1Y2VyPFRWYWx1ZSBleHRlbmRzIEtleVZhbHVlPihzdGF0ZTogRm9ybUdyb3VwU3RhdGU8VFZhbHVlPiwgYWN0aW9uOiBBY3Rpb25zPFRWYWx1ZT4pIHtcbiAgY29uc3QgY29udHJvbHMgPSBjYWxsQ2hpbGRSZWR1Y2VycyhzdGF0ZS5jb250cm9scywgYWN0aW9uKTtcblxuICBpZiAoc3RhdGUuY29udHJvbHMgPT09IGNvbnRyb2xzKSB7XG4gICAgcmV0dXJuIHN0YXRlO1xuICB9XG5cbiAgcmV0dXJuIGNvbXB1dGVHcm91cFN0YXRlKFxuICAgIHN0YXRlLmlkLFxuICAgIGNvbnRyb2xzLFxuICAgIHN0YXRlLnZhbHVlLFxuICAgIHN0YXRlLmVycm9ycyxcbiAgICBzdGF0ZS5wZW5kaW5nVmFsaWRhdGlvbnMsXG4gICAgc3RhdGUudXNlckRlZmluZWRQcm9wZXJ0aWVzLFxuICAgIHtcbiAgICAgIHdhc09yU2hvdWxkQmVEaXJ0eTogc3RhdGUuaXNEaXJ0eSxcbiAgICAgIHdhc09yU2hvdWxkQmVFbmFibGVkOiBzdGF0ZS5pc0VuYWJsZWQsXG4gICAgICB3YXNPclNob3VsZEJlVG91Y2hlZDogc3RhdGUuaXNUb3VjaGVkLFxuICAgICAgd2FzT3JTaG91bGRCZVN1Ym1pdHRlZDogc3RhdGUuaXNTdWJtaXR0ZWQsXG4gICAgfSxcbiAgKTtcbn1cbiJdfQ==